(ns hoplon.svg
  (:refer-clojure :exclude [symbol filter mask set use])
  (:require [hoplon.core :refer [parse-args do!]]))

(defmethod do! :xlink/default
  [elem kw val]
  (let [xlink "http://www.w3.org/1999/xlink"]
    (.setAttributeNS elem xlink (name kw) val)))

(derive :xlink/type    :xlink/default)
(derive :xlink/href    :xlink/default)
(derive :xlink/role    :xlink/default)
(derive :xlink/arcrole :xlink/default)
(derive :xlink/title   :xlink/default)
(derive :xlink/show    :xlink/default)
(derive :xlink/actuate :xlink/default)
(derive :xlink/label   :xlink/default)
(derive :xlink/from    :xlink/default)
(derive :xlink/to      :xlink/default)

(defn mksvg [tag]
  (fn [& args]
    (let [[attr kids] (parse-args args)
          xmlns "http://www.w3.org/2000/svg"
          elem (.createElementNS js/document xmlns tag)]
      (elem attr kids))))

(def a                   (mksvg "a"))
(def altGlyph            (mksvg "altGlyph"))
(def altGlyphDef         (mksvg "altGlyphDef"))
(def altGlyphItem        (mksvg "altGlyphItem"))
(def animate             (mksvg "animate"))
(def animateColor        (mksvg "animateColor"))
(def animateMotion       (mksvg "animateMotion"))
(def animateTransform    (mksvg "animateTransform"))
(def circle              (mksvg "circle"))
(def clipPath            (mksvg "clipPath"))
(def color-profile       (mksvg "color-profile"))
(def cursor              (mksvg "cursor"))
(def defs                (mksvg "defs"))
(def desc                (mksvg "desc"))
(def ellipse             (mksvg "ellipse"))
(def feBlend             (mksvg "feBlend"))
(def feColorMatrix       (mksvg "feColorMatrix"))
(def feComponentTransfer (mksvg "feComponentTransfer"))
(def feComposite         (mksvg "feComposite"))
(def feConvolveMatrix    (mksvg "feConvolveMatrix"))
(def feDiffuseLighting   (mksvg "feDiffuseLighting"))
(def feDisplacementMap   (mksvg "feDisplacementMap"))
(def feDistantLight      (mksvg "feDistantLight"))
(def feFlood             (mksvg "feFlood"))
(def feFuncA             (mksvg "feFuncA"))
(def feFuncB             (mksvg "feFuncB"))
(def feFuncG             (mksvg "feFuncG"))
(def feFuncR             (mksvg "feFuncR"))
(def feGaussianBlur      (mksvg "feGaussianBlur"))
(def feImage             (mksvg "feImage"))
(def feMerge             (mksvg "feMerge"))
(def feMergeNode         (mksvg "feMergeNode"))
(def feMorphology        (mksvg "feMorphology"))
(def feOffset            (mksvg "feOffset"))
(def fePointLight        (mksvg "fePointLight"))
(def feSpecularLighting  (mksvg "feSpecularLighting"))
(def feSpotLight         (mksvg "feSpotLight"))
(def feTile              (mksvg "feTile"))
(def feTurbulence        (mksvg "feTurbulence"))
(def filter              (mksvg "filter"))
(def font                (mksvg "font"))
(def font-face           (mksvg "font-face"))
(def font-face-format    (mksvg "font-face-format"))
(def font-face-name      (mksvg "font-face-name"))
(def font-face-src       (mksvg "font-face-src"))
(def font-face-uri       (mksvg "font-face-uri"))
(def foreignObject       (mksvg "foreignObject"))
(def g                   (mksvg "g"))
(def glyph               (mksvg "glyph"))
(def glyphRef            (mksvg "glyphRef"))
(def hkern               (mksvg "hkern"))
(def image               (mksvg "image"))
(def line                (mksvg "line"))
(def linearGradient      (mksvg "linearGradient"))
(def marker              (mksvg "marker"))
(def mask                (mksvg "mask"))
(def metadata            (mksvg "metadata"))
(def missing-glyph       (mksvg "missing-glyph"))
(def mpath               (mksvg "mpath"))
(def path                (mksvg "path"))
(def pattern             (mksvg "pattern"))
(def polygon             (mksvg "polygon"))
(def polyline            (mksvg "polyline"))
(def radialGradient      (mksvg "radialGradient"))
(def rect                (mksvg "rect"))
(def script              (mksvg "script"))
(def set                 (mksvg "set"))
(def stop                (mksvg "stop"))
(def style               (mksvg "style"))
(def svg                 (mksvg "svg"))
(def switch              (mksvg "switch"))
(def symbol              (mksvg "symbol"))
(def text                (mksvg "text"))
(def textPath            (mksvg "textPath"))
(def title               (mksvg "title"))
(def tref                (mksvg "tref"))
(def tspan               (mksvg "tspan"))
(def use                 (mksvg "use"))
(def view                (mksvg "view"))
(def vkern               (mksvg "vkern"))
